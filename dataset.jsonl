{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id AS interface_id FROM `interface_stats`","output":"db.interface_stats.aggregate[{ \"$project\": { \"interface_id\": 1, \"_id\": 0 } }]"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats","output":"db.app_stats.aggregate([])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats LIMIT 10","output":"db.app_stats.aggregate([\n  {\n    \"$limit\": 10\n  }\n])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM `app_stats` WHERE tenant_id = 100 AND event_time >= '2024-07-10T17:18:50.923Z' AND event_time <  '2024-07-17T17:18:50.923Z'","output":"db.app_stats.aggregate([\n  {\n    $match: {\n      tenant_id: 100,\n      event_time: {\n        $gte: ISODate(\"2024-07-10T17:18:50.923Z\"),\n        $lt: ISODate(\"2024-07-17T17:18:50.923Z\")\n      }\n    }\n  }\n])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id AS interface_id, sum(rx_eap_invalid) AS rx_eap_invalid FROM `radius_stats` WHERE tenant_id = 100 AND event_time >= '2024-07-10T17:18:50.923Z' AND event_time < '2024-07-17T17:18:50.923Z' GROUP BY interface_id","output":"db.radius_stats.aggregate([\n  {\n    $match: {\n      tenant_id: 100,\n      event_time: {\n        $gte: ISODate(\"2024-07-10T17:18:50.923Z\"),\n        $lt: ISODate(\"2024-07-17T17:18:50.923Z\")\n      }\n    }\n  },\n  {\n    $group: {\n      _id: \"$interface_id\",\n      rx_eap_invalid: { $sum: \"$rx_eap_invalid\" }\n    }\n  },\n  {\n    $project: {\n      interface_id: \"$_id\",\n      rx_eap_invalid: 1,\n      _id: 0\n    }\n  }\n])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT app_id,\nsum(IFNULL(bytes_ingress,0)+IFNULL(bytes_egress,0)) AS total_bytes\nFROM `app_stats`\nWHERE tenant_id=@tenant_id\nAND event_time between '2024-06-03T08:10:33.448Z' and '2024-06-10T08:10:33.448Z' \nAND site_id='1717481610479003928'\nAND wan_path_label in ('public_direct','public_vpn','private_vpn','private_direct','servicelink' )\nAND IFNULL(bytes_ingress,0)+IFNULL(bytes_egress,0)<>0\nGROUP BY app_id\nORDER BY total_bytes desc\nLIMIT 10","output":"db.app_stats.aggregate([\n  {\n    $match: {\n      tenant_id: \"1010\",\n      event_time: {\n        $gte: new ISODate(\"2024-06-03T08:10:33.448Z\"),\n        $lte: new ISODate(\"2024-06-10T08:10:33.448Z\")\n      },\n      site_id: \"1717481610479003928\",\n      wan_path_label: {\n        $in: [\"public_direct\", \"public_vpn\", \"private_vpn\", \"private_direct\", \"servicelink\"]\n      },\n      $expr: {\n        $ne: [\n          { $add: [{ $ifNull: [\"$bytes_ingress\", 0] }, { $ifNull: [\"$bytes_egress\", 0] }] },\n          0\n        ]\n      }\n    }\n  },\n  {\n    $group: {\n      _id: \"$app_id\",\n      total_bytes: {\n        $sum: { $add: [{ $ifNull: [\"$bytes_ingress\", 0] }, { $ifNull: [\"$bytes_egress\", 0] }] }\n      }\n    }\n  },\n  {\n    $sort: { total_bytes: -1 }\n  },\n  {\n    $limit: 10\n  },\n  {\n    $project: {\n      _id: 0,\n      app_id: \"$_id\",\n      total_bytes: 1\n    }\n  }\n]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT site_id AS site_id,\n  app_id,\n  path_id AS path_id,\n  timestamp_seconds(300 * DIV(unix_seconds(event_time), 300)) AS duration,\n  max(l2w_audio_mos_max) AS maxValue\nFROM `app_stats`\nWHERE tenant_id=@tenant_id\nAND site_id in ('1726463574156010328' )\nAND app_id in ('1721663191154020928' )\nAND path_id in ('1731993059114011428' )\nAND event_time>='2024-12-23T00:00:00Z'\nAND event_time<'2024-12-24T00:00:00Z'\nGROUP BY app_id,\n  path_id,\n  site_id,\n  duration\nORDER BY site_id asc,\n  path_id asc,\n  duration asc","output":"db.app_stats.aggregate([\n{\n  \"$match\": {\n    \"meta_field.tenant_id\": {\n      \"$eq\": \"1721640814\"\n    },\n    \"event_time\": {\n      $gte: ISODate('2024-12-23T00:00:00Z'),\n      $lt: ISODate('2024-12-24T00:00:00Z')\n    },\n    \"site_id\": {\n      \"$in\": [\n        \"1726463574156010328\"\n      ]\n    },\n    \"meta_field.app_id\": {\n      \"$in\": [\n        \"1721663191154020928\"\n      ]\n    },\n    \"path_id\": {\n      \"$in\": [\n        \"1731993059114011428\"\n      ]\n    }\n  }\n},\n{\n  \"$group\": {\n    \"_id\": {\n      \"duration\": {\n        \"$toDate\": {\n          \"$multiply\": [\n            {\n              \"$floor\": {\n                \"$divide\": [\n                  {\n                    \"$toLong\": \"$event_time\"\n                  },\n                  300000\n                ]\n              }\n            },\n            300000\n          ]\n        }\n      },\n      \"site_id\": \"$site_id\",\n      \"app_id\": \"$app_id\",\n      \"path_id\": \"$path_id\"\n    },\n    \"maxValue\": { \"$max\": \"$l2w_audio_mos_max\" }\n  }\n},\n{\n  \"$project\": {\n    \"_id\": 0,\n    \"duration\": \"$_id.duration\",\n    \"site_id\": \"$_id.site_id\",\n    \"app_id\": \"$_id.app_id\",\n    \"path_id\": \"$_id.path_id\",\n    \"maxValue\": 1\n  }\n},\n{\n  \"$sort\": {\n    \"site_id\": 1,\n    \"element_id\": 1,\n    \"duration\": 1\n  }\n}\n]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT site_id AS site_id,\n  app_id,\n  wan_path_label,\n  timestamp_seconds(300 * DIV(unix_seconds(event_time), 300)) AS duration,\n  max(app_path_type_health) AS maxValue\nFROM ( SELECT site_id AS site_id,\n  app_id,\n  wan_path_label,\n  path_id AS path_id,\n  timestamp_seconds(300 * DIV(unix_seconds(event_time), 300)) AS event_time,\n  min(app_path_type_health) AS app_path_type_health\nFROM ( SELECT site_id AS site_id,\n  app_id,\n  wan_path_label,\n  path_id AS path_id,\n  event_time AS event_time,\n  min(app_path_type_health) AS app_path_type_health\nFROM `app_stats`\nWHERE tenant_id=@tenant_id\nAND event_time<'2024-12-24T00:00:00Z'\nAND event_time>='2024-12-23T00:00:00Z'\nAND site_id in ('1726463574156010328' )\nAND app_id in ('1721663191154020928' )\nAND wan_path_label in ('public_vpn','private_direct','private_vpn','servicelink' )\nGROUP BY event_time,\n  site_id,\n  app_id,\n  path_id,\n  wan_path_label ) \nGROUP BY site_id,\n  path_id,\n  app_id,\n  wan_path_label,\n  event_time ) \nGROUP BY wan_path_label,\n  app_id,\n  duration,\n  site_id\nORDER BY duration asc","output":"db.app_stats.aggregate([\n{\n  \"$match\": {\n    \"meta_field.tenant_id\": {\n      \"$eq\": \"1721640814\"\n    },\n    \"event_time\": {\n      $gte: ISODate('2024-12-23T00:00:00Z'),\n      $lt: ISODate('2024-12-24T00:00:00Z')\n    },\n    \"site_id\": {\n      \"$in\": [\n        \"1726463574156010328\"\n      ]\n    },\n    \"meta_field.app_id\": {\n      \"$in\": [\n        \"1721663191154020928\"\n      ]\n    },\n    \"wan_path_label\": {\n      \"$in\": [\n        \"public_vpn\",\n        \"private_direct\",\n        \"private_vpn\",\n        \"servicelink\"\n      ]\n    }\n  }\n},\n{\n  \"$group\": {\n    \"_id\": {\n      \"duration\": {\n        \"$toDate\": {\n          \"$multiply\": [\n            {\n              \"$floor\": {\n                \"$divide\": [\n                  {\n                    \"$toLong\": \"$event_time\"\n                  },\n                  300000\n                ]\n              }\n            },\n            300000\n          ]\n        }\n      },\n      \"site_id\": \"$site_id\",\n      \"app_id\": \"$app_id\",\n      \"path_id\": \"$path_id\",\n      \"wan_path_label\": \"$wan_path_label\"\n    },\n    \"minHealth\": {\n      \"$min\": \"$app_path_type_health\"\n    }\n  }\n},\n{\n  \"$group\": {\n    \"_id\": {\n      \"site_id\": \"$_id.site_id\",\n      \"app_id\": \"$_id.app_id\",\n      \"wan_path_label\": \"$_id.wan_path_label\",\n      \"duration\": \"$_id.duration\"\n    },\n    \"maxValue\": {\n      \"$max\": \"$minHealth\"\n    }\n  }\n},\n{\n  \"$project\": {\n    \"_id\": 0,\n    \"duration\": \"$_id.duration\",\n    \"site_id\": \"$_id.site_id\",\n    \"app_id\": \"$_id.app_id\",\n    \"wan_path_label\": \"$_id.wan_path_label\",\n    \"maxValue\": 1\n  }\n},\n{\n  \"$sort\": {\n    \"duration\": 1\n  }\n}\n]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT site_id AS site_id,\n  peer_site_id AS peer_site_id,\n  element_id AS element_id,\n  peer_element_id AS peer_element_id,\n  app_id,\n  path_id AS path_id,\n  remote_site_id AS remote_site_id,\n  timestamp_seconds(300 * DIV(unix_seconds(event_time), 300)) AS duration,\n  min(link_healthy) AS minValue\nFROM `lqm_stats`\nWHERE tenant_id=@tenant_id\nAND (site_id in ('1724738512579014328' )\nOR peer_site_id in ('1724738512579014328' ))\nAND (element_id in ('1726222517154015728' )\nOR peer_element_id in ('1726222517154015728' ))\nAND app_id in ('1721663160671016528' )\nAND path_id in ('1731993059108012528' )\nAND remote_site_id='0'\nAND event_time>='2025-01-22T06:58:00Z'\nAND event_time<'2025-01-22T07:58:00Z'\nGROUP BY peer_site_id,\n  remote_site_id,\n  peer_element_id,\n  element_id,\n  duration,\n  app_id,\n  site_id,\n  path_id\nORDER BY site_id asc,\n  peer_site_id asc,\n  element_id asc,\n  peer_element_id asc,\n  path_id asc,\n  remote_site_id asc,\n  duration asc","output":"db.lqm_stats.aggregate([\n  {\n    \"$match\": {\n      \"tenant_id\": \"1721640814\",\n      \"event_time\": {\n        $gte: ISODate('2024-12-23T00:00:00Z'),\n        $lt: ISODate('2024-12-24T00:00:00Z')\n      },\n      \"site_id\": { \"$in\": [\"1726463574156010328\"] },\n      \"element_id\": { \"$in\": [\"1726463524868004728\"] },\n      \"path_id\": { \"$in\": [\"1731993059108012528\"] },\n      \"remote_site_id\": { \"$in\": [ \"0\" ] }\n    }\n  },\n  {\n    \"$group\": {\n      \"_id\": {\n        \"duration\": {\n        \"$toDate\": {\n          \"$multiply\": [\n            {\n              \"$floor\": {\n                \"$divide\": [\n                  {\n                    \"$toLong\": \"$event_time\"\n                  },\n                  300000\n                ]\n              }\n            },\n            300000\n          ]\n        }\n      },\n        \"site_id\": \"$site_id\",\n        \"element_id\": \"$element_id\",\n        \"path_id\": \"$path_id\"\n      },\n      \"minValue\": { \"$min\": \"$link_healthy\" }\n    }\n  },\n  {\n    \"$project\": {\n      \"_id\": 0,\n      \"duration\": \"$_id.duration\",\n      \"site_id\": \"$_id.site_id\",\n      \"element_id\": \"$_id.element_id\",\n      \"path_id\": \"$_id.path_id\",\n      \"minValue\": 1\n    }\n  },\n  {\n    \"$sort\": {\n      \"site_id\": 1,\n      \"element_id\": 1,\n      \"path_id\": 1,\n      \"duration\": 1\n    }\n  }\n]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT element_id AS element_id,\n  timestamp_seconds(5 * 60 * DIV(unix_seconds(event_time), 5 * 60)) AS duration, \n  ((1-avg(avg_idle))*100) AS avgValue \nFROM `cpu_stats`\nWHERE tenant_id='555'\nAND event_time between '2021-12-02T13:00:00Z' and '2021-12-02T14:00:00Z'\nAND site_id in ('15911184024030158' )\nAND element_id in ('16052050682290101' )\nGROUP BY duration,\n  element_id\nORDER BY element_id asc,\n  duration asc","output":"db.cpu_stats.aggregate([\n  {\n    $match: {\n      'meta_field.tenant_id': '1721640814',\n      event_time: {\n        $gte: ISODate('2024-11-27T23:00:00.000Z'),\n        $lt: ISODate('2024-11-27T23:59:00.000Z')\n      },\n      site_id:\n        {\n            $in : ['1724738512579014328']\n        },\n      'meta_field.element_id':\n        {\n            $in : ['1724737851183013528']\n        }\n    }\n  },\n  {\n    $group: {\n      _id: {\n        duration: {\n          $dateToString: {\n            format: '%Y-%m-%dT%H:%M:00.000Z',\n            date: '$event_time'\n          }\n        }\n      },\n      maxAvgIdle: { $avg: '$avg_idle' }\n     }\n  },\n  {\n    \"$project\": {\n    \"_id\": 0,\n    \"duration\": \"$_id.duration\",\n    \"maxValue\": {                   \n      \"$multiply\": [\n        {\n          \"$subtract\": [\n            1,\n            \"$maxAvgIdle\"\n          ]\n        },\n        100\n      ]\n    }\n  }\n  },\n  {\n    $sort: {\n      element_id: 1,\n      duration: 1\n    }\n  }\n]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT app_id,\n  sum(incomplete_trans) AS total_incomplete_trans\nFROM `app_stats`\nWHERE tenant_id=@tenant_id\nAND event_time between '2024-06-03T08:10:33.448Z' and '2024-06-10T08:10:33.448Z'\nAND site_id='1717481610479003928'\nAND wan_path_label in ('public_direct','public_vpn','private_vpn','private_direct','servicelink' )\nAND incomplete_trans<>0\nGROUP BY app_id\nORDER BY total_incomplete_trans desc\nLIMIT 10","output":"db.app_stats.aggregate([\n  {\n    $match: {\n      tenant_id: \"@tenant_id\",\n      event_time: {\n        $gte: new ISODate(\"2024-06-03T08:10:33.448Z\"),\n        $lte: new ISODate(\"2024-06-10T08:10:33.448Z\")\n      },\n      site_id: \"1717481610479003928\",\n      wan_path_label: {\n        $in: [\"public_direct\", \"public_vpn\", \"private_vpn\", \"private_direct\", \"servicelink\"]\n      },\n      incomplete_trans: {\n        $ne: 0\n      }\n    }\n  },\n  {\n    $group: {\n      _id: \"$app_id\",\n      total_init_failure: {\n        $sum: \"$incomplete_trans\"\n      }\n    }\n  },\n  {\n    $sort: { total_incomplete_trans: -1 }\n  },\n  {\n    $limit: 10\n  },\n  {\n    $project: {\n      _id: 0,\n      app_id: \"$_id\",\n      total_incomplete_trans: 1\n    }\n  }\n]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier AS carrier, sum(network_disconnects) AS network_disconnects FROM `cellular_stats` WHERE tenant_id=@tenant_id AND event_time>='2024-07-18T13:55:53.916Z' AND event_time<'2024-07-19T13:55:53.916Z' AND site_id in ('1717481610479003928' ) AND element_id in ('1717600873130005728' ) AND network_disconnects<>0 GROUP BY carrier ORDER BY network_disconnects desc, carrier asc LIMIT 10","output":"db.interface_stats.aggregate([{ $match: { tenant_id: \"1010\", event_time: { $gte: new ISODate(\"2024-07-09T08:42:38.826Z\"), $lt: new ISODate(\"2024-07-16T08:42:38.826Z\") }, site_id: { $in: [\"1717481610479003928\"] }, element_id: { $in: [\"1717600873130005728\"] }, network_disconnects: { $ne: 0 } } }, { $group: { _id: \"$carrier\", network_disconnects: { $sum: \"$network_disconnects\" } } }, { $sort: { network_disconnects: -1, _id: 1 } }, { $limit: 10 }, { $project: { _id: 0, carrier: \"$_id\", network_disconnects: 1 } }]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier AS carrier, sum(sim_switchovers) AS sim_switchovers FROM `cellular_stats` WHERE tenant_id=@tenant_id AND event_time>='2024-07-18T13:55:53.916Z' AND event_time<'2024-07-19T13:55:53.916Z' AND site_id in ('1717481610479003928' ) AND element_id in ('1717600873130005728' ) AND sim_switchovers<>0 GROUP BY carrier ORDER BY sim_switchovers desc, carrier asc LIMIT 10","output":"db.cellular_stats.aggregate([{ $match: { tenant_id: \"1010\", event_time: { $gte: new ISODate(\"2024-07-09T08:42:38.826Z\"), $lt: new ISODate(\"2024-07-16T08:42:38.826Z\") }, site_id: { $in: [\"1717481610479003928\"] }, element_id: { $in: [\"1717600873130005728\"] }, sim_switchovers: { $ne: 0 } } }, { $group: { _id: \"$carrier\", sim_switchovers: { $sum: \"$sim_switchovers\" } } }, { $sort: { sim_switchovers: -1, _id: 1 } }, { $limit: 10 }, { $project: { _id: 0, carrier: \"_id\", sim_switchovers: 1 } }]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier AS carrier, sum(network_disconnects) AS network_disconnects FROM `cellular_stats` WHERE tenant_id=@tenant_id AND event_time>='2024-07-18T13:55:53.916Z' AND event_time<'2024-07-19T13:55:53.916Z' AND site_id in ('1717481610479003928' ) AND element_id in ('1717600873130005728' ) AND network_disconnects<>0 GROUP BY carrier ORDER BY network_disconnects desc, carrier asc LIMIT 10","output":"db.cellular_stats.aggregate([{ $match: { tenant_id: \"1010\", event_time: { $gte: new ISODate(\"2024-07-09T08:42:38.826Z\"), $lt: new ISODate(\"2024-07-16T08:42:38.826Z\") }, site_id: { $in: [\"1717481610479003928\"] }, element_id: { $in: [\"1717600873130005728\"] }, network_disconnects: { $ne: 0 } } }, { $group: { _id: \"$carrier\", network_disconnects: { $sum: \"$network_disconnects\" } } }, { $sort: { network_disconnects: -1, _id: 1 } }, { $limit: 10 }, { $project: { _id: 0, carrier: \"$_id\", network_disconnects: 1 } }]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier AS carrier, sum(rx_total_bytes) AS rx_total_bytes FROM `cellular_apn_stats` WHERE tenant_id=@tenant_id AND event_time>='2024-07-18T13:55:53.916Z' AND event_time<'2024-07-19T13:55:53.916Z' AND site_id in ('1717481610479003928' ) AND element_id in ('1717600873130005728' ) AND rx_total_bytes<>0 GROUP BY carrier ORDER BY rx_total_bytes desc, carrier asc LIMIT 10","output":"db.cellular_apn_stats.aggregate([{ $match: { tenant_id: \"1010\", event_time: { $gte: new ISODate(\"2024-07-09T08:42:38.826Z\"), $lt: new ISODate(\"2024-07-16T08:42:38.826Z\") }, site_id: { $in: [\"1717481610479003928\"] }, element_id: { $in: [\"1717600873130005728\"] }, rx_total_bytes: { $ne: 0 } } }, { $group: { _id: \"$carrier\", rx_total_bytes: { $sum: \"$rx_total_bytes\" } } }, { $sort: { rx_total_bytes: -1, _id: 1 } }, { $limit: 10 }, { $project: { _id: 0, carrier: \"$_id\", rx_total_bytes: 1 } }]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id AS interface_id, sum(rx_eap_len_err) AS rx_eap_len_err FROM `pa-sase-insights-dev-02.aqadir__service__account_274973438358044__sdwan_dataset.radius_stats` WHERE tenant_id=@tenant_id AND event_time>='2024-07-10T17:18:50.923Z' AND event_time<'2024-07-17T17:18:50.923Z' AND site_id in ('1717481610479003928' ) AND element_id in ('1717600873130005728' ) AND rx_eap_len_err<>0 GROUP BY interface_id ORDER BY rx_eap_len_err desc, interface_id asc LIMIT 10","output":"db.interface_stats.aggregate([{ $match: { tenant_id: \"1010\", event_time: { $gte: new ISODate(\"2024-07-09T08:42:38.826Z\"), $lt: new ISODate(\"2024-07-16T08:42:38.826Z\") }, site_id: { $in: [\"1717481610479003928\"] }, element_id: { $in: [\"1717600873130005728\"] }, rx_eap_len_err: { $ne: 0 } } }, { $group: { _id: \"$interface_id\", rx_eap_len_err: { $sum: \"$rx_eap_len_err\" } } }, { $sort: { rx_eap_len_err: -1, _id: 1 } }, { $limit: 10 }, { $project: { _id: 0, interface_id: \"$_id\", rx_eap_len_err: 1 } }]);"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats","output":"db.app_stats.aggregate([])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE tenant_id = 100","output":"db.app_stats.aggregate([{ $match: { tenant_id: 100 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE event_time >= '2024-07-10T17:18:50.923Z' AND event_time < '2024-07-17T17:18:50.923Z'","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10T17:18:50.923Z\"), $lt: ISODate(\"2024-07-17T17:18:50.923Z\") } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id, sum(rx_bytes) FROM app_stats GROUP BY interface_id","output":"db.app_stats.aggregate([{ $group: { _id: \"$interface_id\", rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes) FROM app_stats GROUP BY carrier ORDER BY rx_bytes DESC","output":"db.app_stats.aggregate([{ $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" } } }, { $sort: { rx_bytes: -1 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats LIMIT 10","output":"db.app_stats.aggregate([{ $limit: 10 }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes) FROM app_stats WHERE network_disconnects <> 0 GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { network_disconnects: { $ne: 0 } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE site_id IN ('1717481610479003928')","output":"db.app_stats.aggregate([{ $match: { site_id: { $in: [\"1717481610479003928\"] } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE rx_bytes IS NOT NULL","output":"db.app_stats.aggregate([{ $match: { rx_bytes: { $ne: null } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes), count(*) FROM app_stats GROUP BY carrier","output":"db.app_stats.aggregate([{ $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" }, total_count: { $sum: 1 } } } })"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats","output":"db.app_stats.aggregate([])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE tenant_id = 100","output":"db.app_stats.aggregate([{ $match: { tenant_id: 100 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17'","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id, sum(rx_bytes) FROM app_stats GROUP BY interface_id","output":"db.app_stats.aggregate([{ $group: { _id: \"$interface_id\", rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes) FROM app_stats GROUP BY carrier ORDER BY rx_bytes DESC","output":"db.app_stats.aggregate([{ $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" } } }, { $sort: { rx_bytes: -1 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats LIMIT 10","output":"db.app_stats.aggregate([{ $limit: 10 }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats LIMIT 10","output":"db.app_stats.aggregate([{ $limit: 10 }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes) FROM app_stats WHERE network_disconnects <> 0 GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { network_disconnects: { $ne: 0 } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE site_id IN ('1717481610479003928')","output":"db.app_stats.aggregate([{ $match: { site_id: { $in: [\"1717481610479003928\"] } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE rx_bytes IS NOT NULL","output":"db.app_stats.aggregate([{ $match: { rx_bytes: { $ne: null } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes), count(*) FROM app_stats GROUP BY carrier","output":"db.app_stats.aggregate([{ $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" }, total_count: { $sum: 1 } } } })"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE tenant_id = 100 AND site_id = '1717481610479003928'","output":"db.app_stats.aggregate([{ $match: { tenant_id: 100, site_id: \"1717481610479003928\" } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT * FROM app_stats WHERE tenant_id = 100 AND site_id = '1717481610479003928'","output":"db.app_stats.aggregate([{ $match: { tenant_id: 100, site_id: \"1717481610479003928\" } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT site_id, sum(rx_bytes), avg(rx_latency) FROM app_stats GROUP BY site_id","output":"db.app_stats.aggregate([{ $group: { _id: \"$site_id\", rx_bytes: { $sum: \"$rx_bytes\" }, rx_latency_avg: { $avg: \"$rx_latency\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, count(*), sum(rx_bytes) FROM app_stats GROUP BY carrier","output":"db.app_stats.aggregate([{ $group: { _id: \"$carrier\", total_count: { $sum: 1 }, rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, count(*), sum(rx_bytes) FROM app_stats GROUP BY carrier","output":"db.app_stats.aggregate([{ $group: { _id: \"$carrier\", total_count: { $sum: 1 }, rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id, sum(rx_bytes) FROM app_stats WHERE event_time >= '2024-07-10' GROUP BY interface_id","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\") } } }, { $group: { _id: \"$interface_id\", rx_bytes: { $sum: \"$rx_bytes\" } } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id, sum(rx_bytes) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY interface_id ORDER BY rx_bytes DESC","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$interface_id\", rx_bytes: { $sum: \"$rx_bytes\" } } }, { $sort: { rx_bytes: -1 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" } } }, { $project: { carrier: \"$_id\", rx_bytes: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes), count(*) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" }, total_count: { $sum: 1 } } }, { $project: { carrier: \"$_id\", rx_bytes: 1, total_count: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes), avg(rx_latency) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" }, rx_latency_avg: { $avg: \"$rx_latency\" } } }, { $project: { carrier: \"$_id\", rx_bytes: 1, rx_latency_avg: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT interface_id, sum(rx_bytes), avg(rx_latency) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY interface_id","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$interface_id\", rx_bytes: { $sum: \"$rx_bytes\" }, rx_latency_avg: { $avg: \"$rx_latency\" } } }, { $project: { interface_id: \"$_id\", rx_bytes: 1, rx_latency_avg: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY carrier ORDER BY rx_bytes DESC","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" } } }, { $sort: { rx_bytes: -1 } }, { $project: { carrier: \"$_id\", rx_bytes: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, count(distinct rx_bytes) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$carrier\", distinct_rx_bytes: { $addToSet: \"$rx_bytes\" } } }, { $project: { carrier: \"$_id\", distinct_rx_bytes_count: { $size: \"$distinct_rx_bytes\" }, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT site_id, sum(rx_bytes), avg(rx_latency), max(rx_signal) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY site_id","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$site_id\", rx_bytes: { $sum: \"$rx_bytes\" }, rx_latency_avg: { $avg: \"$rx_latency\" }, max_rx_signal: { $max: \"$rx_signal\" } } }, { $project: { site_id: \"$_id\", rx_bytes: 1, rx_latency_avg: 1, max_rx_signal: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, sum(rx_bytes), avg(rx_latency) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' AND network_disconnects <> 0 GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") }, network_disconnects: { $ne: 0 } } }, { $group: { _id: \"$carrier\", rx_bytes: { $sum: \"$rx_bytes\" }, rx_latency_avg: { $avg: \"$rx_latency\" } } }, { $project: { carrier: \"$_id\", rx_bytes: 1, rx_latency_avg: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT carrier, count(*) as total, sum(rx_bytes) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' GROUP BY carrier","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") } } }, { $group: { _id: \"$carrier\", total_count: { $sum: 1 }, rx_bytes: { $sum: \"$rx_bytes\" } } }, { $project: { carrier: \"$_id\", total_count: 1, rx_bytes: 1, _id: 0 } }])"}
{"instruction":"Convert BQ SQL Query to Mongo aggregation Pipeline query","input":"SELECT site_id, sum(rx_bytes), avg(rx_latency) FROM app_stats WHERE event_time >= '2024-07-10' AND event_time < '2024-07-17' AND site_id IN ('1717481610479003928') GROUP BY site_id","output":"db.app_stats.aggregate([{ $match: { event_time: { $gte: ISODate(\"2024-07-10\"), $lt: ISODate(\"2024-07-17\") }, site_id: { $in: [\"1717481610479003928\"] } } }, { $group: { _id: \"$site_id\", rx_bytes: { $sum: \"$rx_bytes\" }, rx_latency_avg: { $avg: \"$rx_latency\" } } }, { $project: { site_id: \"$_id\", rx_bytes: 1, rx_latency_avg: 1, _id: 0 } }])"}
